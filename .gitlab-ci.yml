stages:
  - build
  - deploy

variables:
  VIOLET_DOCKER_EMAIL: $VIOLET_DOCKER_EMAIL
  VIOLET_DOCKER_PASSWORD: $VIOLET_DOCKER_PASSWORD

before_script:
  - export PROJECT_NAME=$(cat package.json | grep name | head -1 | awk -F "[\"]" '/name/{print$4}')
  - export BUILD_TAG=$CI_COMMIT_TAG-$PROJECT_NAME

build-job:
  stage: build
  image: node:20
  only:
    - tags
  before_script:
    - apt-get update && apt-get install -y docker.io  # 安装 Docker
    - service docker start  # 启动 Docker 服务
  script:
    - echo "Compiling the code..."
    - npm install
    - npm run build
    - docker info  # 确认 Docker 是否可用
    - echo "Login to Docker Hub"
    - echo $VIOLET_DOCKER_PASSWORD | docker login -u $VIOLET_DOCKER_EMAIL --password-stdin
    - docker build -t $VIOLET_REGISTRY/$VIOLET_DOCKER_IMAGE_NAME:$BUILD_TAG .  # 使用构建好的文件生成 Docker 镜像
    - docker push $VIOLET_REGISTRY/$VIOLET_DOCKER_IMAGE_NAME:$BUILD_TAG
  artifacts:
    paths:
      - dist/  # 保存构建产物，以便后续部署
  cache:
    paths:
      - node_modules/

deploy-job:
  stage: deploy
  only:
    - tags
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
