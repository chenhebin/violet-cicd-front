stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy
variables:
  CI_COMMIT_TAG: $CI_COMMIT_TAG
  VIOLET_DOCKER_EMAIL: $VIOLET_DOCKER_EMAIL
  VIOLET_DOCKER_PASSWORD: $VIOLET_DOCKER_PASSWORD

before_script:
  - export PROJECT_NAME=$(cat package.json | grep name | head -1 | awk -F "[\"]" '/name/{print$4}')
build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: node:20
#  only:
#    - tags
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."
    - npm install
    - npm run build
    - echo "This job runs on runners with the 'violet' tag"
    # 登录 Docker 仓库
    - echo "Login to Docker Hub"
    - echo $PROJECT_NAME
    - echo $VIOLET_DOCKER_EMAIL
    - echo $VIOLET_DOCKER_PASSWORD
    - apt-get update && apt-get install -y docker.io
    - docker login -u $VIOLET_DOCKER_EMAIL -p $VIOLET_DOCKER_PASSWORD
    - docker build -t $VIOLET_REGISTRY/$VIOLET_DOCKER_IMAGE_NAME:$CI_COMMIT_TAG-$PROJECT_NAME .
    - docker push $VIOLET_REGISTRY/$VIOLET_IMAGE_NAME:$CI_COMMIT_TAG-$PROJECT_NAME
  artifacts:
    paths:
      - dist/
  cache:
    paths:
      - node_modules/

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  only:
    - tags
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
